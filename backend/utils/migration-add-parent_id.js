import db from '../src/db/initDB.js';

async function runMigration() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–æ–ª–±–µ—Ü `parent_id`
    const columnExists = await db.get(`
      SELECT 1 FROM pragma_table_info('Departments') WHERE name = 'parent_id';
    `);

    if (!columnExists) {
      await db.run(`
        ALTER TABLE Departments ADD COLUMN parent_id INTEGER REFERENCES Departments(id);
      `);
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü parent_id —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');
    } else {
      console.log('‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü parent_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ.');
    }

    // 2. –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º "–∑—É–ø-000"
    let rootDept = await db.get(
      'SELECT id FROM Departments WHERE code_zup = ?',
      ['–∑—É–ø-000']
    );

    if (!rootDept) {
      const { lastID } = await db.run(
        `INSERT INTO Departments (name, fullname, code_zup, organization, parent_id) 
         VALUES (?, ?, ?, ?, NULL)`,
        ['–ö–æ—Ä–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ', '–ö–æ—Ä–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ', '–∑—É–ø-000', '–ù–°–†–ó']
      );
      rootDept = { id: lastID };
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–æ—Ä–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º "–∑—É–ø-000".');
    } else {
      console.log('‚ÑπÔ∏è –ö–æ—Ä–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º "–∑—É–ø-000" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
    }

    // 3. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è parent_id = –∫–æ—Ä–Ω–µ–≤–æ–º—É
    const { changes } = await db.run(
      'UPDATE Departments SET parent_id = ? WHERE parent_id IS NULL AND id != ?',
      [rootDept.id, rootDept.id]
    );
    console.log(`‚úÖ –ü–æ–ª–µ parent_id –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è ${changes} –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π.`);

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', err.message);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å –æ—à–∏–±–∫–æ–π
  } finally {
    db.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
  }
}

runMigration();
