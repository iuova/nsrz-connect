{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/nsrz-connect/frontend/src/components/admin/NewsTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport NewsEditor from '../../components/NewsEditor';\nimport Pagination from '../common/Pagination';\nimport { formatDate } from '../../utils/dateUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewsTab = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editingNewsId, setEditingNewsId] = useState(null);\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n\n  // Функция для загрузки новостей с сервера\n  const loadNews = useCallback(async (page = 1, query = '') => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/news`, {\n        params: {\n          page,\n          limit: itemsPerPage,\n          search: query\n        }\n      });\n      setNews(response.data.news || []);\n      setTotalPages(Math.ceil((response.data.total || 0) / itemsPerPage));\n      setCurrentPage(page);\n    } catch (err) {\n      console.error('Error loading news:', err);\n      setError('Не удалось загрузить новости');\n    } finally {\n      setLoading(false);\n    }\n  }, [itemsPerPage]);\n\n  // Загрузка новостей при первом рендере и при изменении страницы или поискового запроса\n  useEffect(() => {\n    loadNews(currentPage, searchQuery);\n  }, [loadNews, currentPage, searchQuery]);\n\n  // Открытие редактора для создания новой новости\n  const handleCreateNews = () => {\n    setEditingNewsId(null);\n    setIsEditorOpen(true);\n  };\n\n  // Открытие редактора для редактирования существующей новости\n  const handleEditNews = newsId => {\n    setEditingNewsId(newsId);\n    setIsEditorOpen(true);\n  };\n\n  // Обработчик поиска новостей\n  const handleSearch = e => {\n    e.preventDefault();\n    setCurrentPage(1); // сброс на первую страницу при новом поиске\n    loadNews(1, searchQuery);\n  };\n\n  // Изменение статуса публикации новости\n  const togglePublishStatus = async (newsId, currentStatus) => {\n    try {\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/news/${newsId}/publish`, {\n        published: !currentStatus\n      });\n\n      // Обновление списка новостей после изменения статуса\n      setNews(news.map(item => item.id === newsId ? {\n        ...item,\n        published: response.data.published\n      } : item));\n    } catch (err) {\n      console.error('Error updating publish status:', err);\n      setError('Не удалось изменить статус публикации');\n    }\n  };\n\n  // Удаление новостей\n  const handleDeleteNews = async () => {\n    if (selectedItems.length === 0) {\n      alert('Выберите новости для удаления');\n      return;\n    }\n    if (window.confirm('Вы уверены, что хотите удалить выбранные новости?')) {\n      try {\n        // Удаляем все выбранные новости\n        await Promise.all(selectedItems.map(id => axios.delete(`${process.env.REACT_APP_API_URL}/news/${id}`)));\n        // Обновляем список новостей после удаления\n        setNews(prev => prev.filter(item => !selectedItems.includes(item.id)));\n        setSelectedItems([]);\n        setSelectAll(false);\n      } catch (err) {\n        console.error('Error deleting news:', err);\n        setError('Не удалось удалить новости');\n      }\n    }\n  };\n\n  // Обработчик создания/редактирования новости\n  const handleNewsCreated = () => {\n    loadNews(currentPage, searchQuery);\n    setIsEditorOpen(false);\n  };\n  const handleSelectItem = id => {\n    setSelectedItems(prev => {\n      if (prev.includes(id)) {\n        return prev.filter(itemId => itemId !== id);\n      } else {\n        return [...prev, id];\n      }\n    });\n  };\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(currentItems.map(item => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n  const handleRowDoubleClick = newsItem => {\n    handleEditNews(newsItem.id);\n  };\n\n  // Функция для сортировки\n  const requestSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Получение иконки сортировки\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) {\n      return '↕';\n    }\n    return sortConfig.direction === 'asc' ? '↓' : '↑';\n  };\n\n  // Сортировка данных\n  const sortedData = React.useMemo(() => {\n    let sortableItems = [...news];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] === null) return sortConfig.direction === 'asc' ? 1 : -1;\n        if (b[sortConfig.key] === null) return sortConfig.direction === 'asc' ? -1 : 1;\n\n        // Сортировка строк\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [news, sortConfig]);\n  useEffect(() => {\n    // Сбрасываем выбор при смене страницы\n    setSelectedItems([]);\n    setSelectAll(false);\n  }, [currentPage]);\n\n  // Определение текущих элементов для отображения с учетом пагинации\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = sortedData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Функция для форматирования даты\n  const formatDateString = dateString => {\n    if (!dateString) return 'Нет данных';\n    return formatDate(new Date(dateString));\n  };\n\n  // Получение имени автора (если есть)\n  const getAuthorName = (authorId, email) => {\n    if (!authorId) return 'Не указан';\n    return email || `ID: ${authorId}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNews,\n        className: \"btn-add\",\n        children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), selectedItems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteNews,\n          className: \"btn-action btn-delete\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-form\",\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043A\\u0443...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-btn\",\n          children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), isEditorOpen && /*#__PURE__*/_jsxDEV(NewsEditor, {\n      newsId: editingNewsId,\n      onClose: () => setIsEditorOpen(false),\n      onNewsCreated: handleNewsCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"news-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectAll,\n              onChange: handleSelectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('id'),\n            className: \"sortable-column\",\n            children: [\"ID \", getSortIcon('id')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('title'),\n            className: \"sortable-column\",\n            children: [\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \", getSortIcon('title')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('author_email'),\n            className: \"sortable-column\",\n            children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440 \", getSortIcon('author_email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('created_at'),\n            className: \"sortable-column\",\n            children: [\"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \", getSortIcon('created_at')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('published'),\n            className: \"sortable-column\",\n            children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \", getSortIcon('published')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onDoubleClick: () => handleRowDoubleClick(item),\n          className: `news-row ${selectedItems.includes(item.id) ? 'selected' : ''} ${item.published ? 'published' : 'unpublished'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedItems.includes(item.id),\n              onChange: () => handleSelectItem(item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getAuthorName(item.author_id, item.author_email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDateString(item.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${item.published ? 'published' : 'unpublished'}`,\n              onClick: () => togglePublishStatus(item.id, item.published),\n              children: item.published ? 'Опубликовано' : 'Черновик'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsCount: sortedData.length,\n      itemsPerPage: itemsPerPage,\n      currentPage: currentPage,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewsTab, \"JitvAtOyxSF0C1vnaKK0TmV+dFc=\");\n_c = NewsTab;\nexport default NewsTab;\nvar _c;\n$RefreshReg$(_c, \"NewsTab\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","NewsEditor","Pagination","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","NewsTab","_s","news","setNews","loading","setLoading","error","setError","editingNewsId","setEditingNewsId","isEditorOpen","setIsEditorOpen","currentPage","setCurrentPage","itemsPerPage","totalPages","setTotalPages","searchQuery","setSearchQuery","selectedItems","setSelectedItems","selectAll","setSelectAll","sortConfig","setSortConfig","key","direction","loadNews","page","query","response","get","process","env","REACT_APP_API_URL","params","limit","search","data","Math","ceil","total","err","console","handleCreateNews","handleEditNews","newsId","handleSearch","e","preventDefault","togglePublishStatus","currentStatus","put","published","map","item","id","handleDeleteNews","length","alert","window","confirm","Promise","all","delete","prev","filter","includes","handleNewsCreated","handleSelectItem","itemId","handleSelectAll","currentItems","handleRowDoubleClick","newsItem","requestSort","getSortIcon","sortedData","useMemo","sortableItems","sort","a","b","indexOfLastItem","indexOfFirstItem","slice","formatDateString","dateString","Date","getAuthorName","authorId","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","onClose","onNewsCreated","checked","onDoubleClick","title","author_id","author_email","created_at","itemsCount","onPageChange","_c","$RefreshReg$"],"sources":["/Users/mac/Projects/nsrz-connect/frontend/src/components/admin/NewsTab.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport NewsEditor from '../../components/NewsEditor';\nimport Pagination from '../common/Pagination';\nimport { formatDate } from '../../utils/dateUtils';\n\nconst NewsTab = () => {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editingNewsId, setEditingNewsId] = useState(null);\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n\n  // Функция для загрузки новостей с сервера\n  const loadNews = useCallback(async (page = 1, query = '') => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/news`, {\n        params: {\n          page,\n          limit: itemsPerPage,\n          search: query\n        }\n      });\n      \n      setNews(response.data.news || []);\n      setTotalPages(Math.ceil((response.data.total || 0) / itemsPerPage));\n      setCurrentPage(page);\n    } catch (err) {\n      console.error('Error loading news:', err);\n      setError('Не удалось загрузить новости');\n    } finally {\n      setLoading(false);\n    }\n  }, [itemsPerPage]);\n\n  // Загрузка новостей при первом рендере и при изменении страницы или поискового запроса\n  useEffect(() => {\n    loadNews(currentPage, searchQuery);\n  }, [loadNews, currentPage, searchQuery]);\n\n  // Открытие редактора для создания новой новости\n  const handleCreateNews = () => {\n    setEditingNewsId(null);\n    setIsEditorOpen(true);\n  };\n\n  // Открытие редактора для редактирования существующей новости\n  const handleEditNews = (newsId) => {\n    setEditingNewsId(newsId);\n    setIsEditorOpen(true);\n  };\n\n  // Обработчик поиска новостей\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setCurrentPage(1); // сброс на первую страницу при новом поиске\n    loadNews(1, searchQuery);\n  };\n\n  // Изменение статуса публикации новости\n  const togglePublishStatus = async (newsId, currentStatus) => {\n    try {\n      const response = await axios.put(\n        `${process.env.REACT_APP_API_URL}/news/${newsId}/publish`, \n        { published: !currentStatus }\n      );\n      \n      // Обновление списка новостей после изменения статуса\n      setNews(news.map(item => \n        item.id === newsId ? { ...item, published: response.data.published } : item\n      ));\n    } catch (err) {\n      console.error('Error updating publish status:', err);\n      setError('Не удалось изменить статус публикации');\n    }\n  };\n\n  // Удаление новостей\n  const handleDeleteNews = async () => {\n    if (selectedItems.length === 0) {\n      alert('Выберите новости для удаления');\n      return;\n    }\n    \n    if (window.confirm('Вы уверены, что хотите удалить выбранные новости?')) {\n      try {\n        // Удаляем все выбранные новости\n        await Promise.all(selectedItems.map(id => \n          axios.delete(`${process.env.REACT_APP_API_URL}/news/${id}`)\n        ));\n        // Обновляем список новостей после удаления\n        setNews(prev => prev.filter(item => !selectedItems.includes(item.id)));\n        setSelectedItems([]);\n        setSelectAll(false);\n      } catch (err) {\n        console.error('Error deleting news:', err);\n        setError('Не удалось удалить новости');\n      }\n    }\n  };\n\n  // Обработчик создания/редактирования новости\n  const handleNewsCreated = () => {\n    loadNews(currentPage, searchQuery);\n    setIsEditorOpen(false);\n  };\n\n  const handleSelectItem = (id) => {\n    setSelectedItems(prev => {\n      if (prev.includes(id)) {\n        return prev.filter(itemId => itemId !== id);\n      } else {\n        return [...prev, id];\n      }\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(currentItems.map(item => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n\n  const handleRowDoubleClick = (newsItem) => {\n    handleEditNews(newsItem.id);\n  };\n\n  // Функция для сортировки\n  const requestSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Получение иконки сортировки\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) {\n      return '↕';\n    }\n    return sortConfig.direction === 'asc' ? '↓' : '↑';\n  };\n\n  // Сортировка данных\n  const sortedData = React.useMemo(() => {\n    let sortableItems = [...news];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] === null) return sortConfig.direction === 'asc' ? 1 : -1;\n        if (b[sortConfig.key] === null) return sortConfig.direction === 'asc' ? -1 : 1;\n        \n        // Сортировка строк\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'asc' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [news, sortConfig]);\n\n  useEffect(() => {\n    // Сбрасываем выбор при смене страницы\n    setSelectedItems([]);\n    setSelectAll(false);\n  }, [currentPage]);\n\n  // Определение текущих элементов для отображения с учетом пагинации\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = sortedData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Функция для форматирования даты\n  const formatDateString = (dateString) => {\n    if (!dateString) return 'Нет данных';\n    return formatDate(new Date(dateString));\n  };\n\n  // Получение имени автора (если есть)\n  const getAuthorName = (authorId, email) => {\n    if (!authorId) return 'Не указан';\n    return email || `ID: ${authorId}`;\n  };\n\n  if (loading) return <div className=\"loading\">Загрузка...</div>;\n  if (error) return <div className=\"error\">Ошибка: {error}</div>;\n\n  return (\n    <>\n      <div className=\"actions-toolbar\">\n        <button \n          onClick={handleCreateNews}\n          className=\"btn-add\"\n        >\n          + Добавить новость\n        </button>\n        \n        {selectedItems.length > 0 && (\n          <>\n            <button\n              onClick={handleDeleteNews}\n              className=\"btn-action btn-delete\"\n            >\n              Удалить выбранные\n            </button>\n          </>\n        )}\n        \n        <form className=\"search-form\" onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Поиск по заголовку...\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-btn\">Поиск</button>\n        </form>\n      </div>\n\n      {isEditorOpen && (\n        <NewsEditor\n          newsId={editingNewsId}\n          onClose={() => setIsEditorOpen(false)}\n          onNewsCreated={handleNewsCreated}\n        />\n      )}\n\n      <table className=\"news-table\">\n        <thead>\n          <tr>\n            <th>\n              <input \n                type=\"checkbox\" \n                checked={selectAll}\n                onChange={handleSelectAll}\n              />\n            </th>\n            <th onClick={() => requestSort('id')} className=\"sortable-column\">\n              ID {getSortIcon('id')}\n            </th>\n            <th onClick={() => requestSort('title')} className=\"sortable-column\">\n              Заголовок {getSortIcon('title')}\n            </th>\n            <th onClick={() => requestSort('author_email')} className=\"sortable-column\">\n              Автор {getSortIcon('author_email')}\n            </th>\n            <th onClick={() => requestSort('created_at')} className=\"sortable-column\">\n              Дата создания {getSortIcon('created_at')}\n            </th>\n            <th onClick={() => requestSort('published')} className=\"sortable-column\">\n              Статус {getSortIcon('published')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map(item => (\n            <tr \n              key={item.id} \n              onDoubleClick={() => handleRowDoubleClick(item)}\n              className={`news-row ${selectedItems.includes(item.id) ? 'selected' : ''} ${item.published ? 'published' : 'unpublished'}`}\n            >\n              <td>\n                <input \n                  type=\"checkbox\" \n                  checked={selectedItems.includes(item.id)}\n                  onChange={() => handleSelectItem(item.id)}\n                />\n              </td>\n              <td>{item.id}</td>\n              <td>{item.title}</td>\n              <td>{getAuthorName(item.author_id, item.author_email)}</td>\n              <td>{formatDateString(item.created_at)}</td>\n              <td>\n                <span \n                  className={`status-badge ${item.published ? 'published' : 'unpublished'}`}\n                  onClick={() => togglePublishStatus(item.id, item.published)}\n                >\n                  {item.published ? 'Опубликовано' : 'Черновик'}\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <Pagination\n        itemsCount={sortedData.length}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </>\n  );\n};\n\nexport default NewsTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}