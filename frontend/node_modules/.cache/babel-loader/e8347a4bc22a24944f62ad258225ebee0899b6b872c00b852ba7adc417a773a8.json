{"ast":null,"code":"var _jsxFileName = \"/Users/mac/iCloud Drive (Archive)/Test_project/frontend/src/pages/Structure.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport './Structure.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Structure = () => {\n  _s();\n  const [structure, setStructure] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Временная заглушка для структуры\n    const mockStructure = {\n      name: 'НСРЗ',\n      departments: [{\n        id: 1,\n        name: 'Руководство',\n        employees: [{\n          id: 1,\n          name: 'Иванов И.И.',\n          position: 'Директор'\n        }]\n      }, {\n        id: 2,\n        name: 'Производственный отдел',\n        employees: [{\n          id: 2,\n          name: 'Петров П.П.',\n          position: 'Начальник отдела'\n        }, {\n          id: 3,\n          name: 'Сидоров С.С.',\n          position: 'Инженер'\n        }]\n      }]\n    };\n    setTimeout(() => {\n      setStructure(mockStructure);\n      setLoading(false);\n    }, 500);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"structure-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u0442\\u0440\\u0443\\u043A\\u0442\\u0443\\u0440\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"structure-tree\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"company-name\",\n          children: structure.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"departments\",\n          children: structure.departments.map(dept => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"department\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"department-name\",\n              children: dept.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employees\",\n              children: dept.employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"employee-name\",\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"employee-position\",\n                  children: emp.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this)]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, dept.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Structure, \"At0ulAVPMc2j37WLI/ltslam/rA=\");\n_c = Structure;\nexport default Structure;\nvar _c;\n$RefreshReg$(_c, \"Structure\");","map":{"version":3,"names":["React","useState","useEffect","Layout","jsxDEV","_jsxDEV","Structure","_s","structure","setStructure","loading","setLoading","mockStructure","name","departments","id","employees","position","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","dept","emp","_c","$RefreshReg$"],"sources":["/Users/mac/iCloud Drive (Archive)/Test_project/frontend/src/pages/Structure.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport './Structure.css';\n\nconst Structure = () => {\n  const [structure, setStructure] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Временная заглушка для структуры\n    const mockStructure = {\n      name: 'НСРЗ',\n      departments: [\n        {\n          id: 1,\n          name: 'Руководство',\n          employees: [\n            { id: 1, name: 'Иванов И.И.', position: 'Директор' }\n          ]\n        },\n        {\n          id: 2,\n          name: 'Производственный отдел',\n          employees: [\n            { id: 2, name: 'Петров П.П.', position: 'Начальник отдела' },\n            { id: 3, name: 'Сидоров С.С.', position: 'Инженер' }\n          ]\n        }\n      ]\n    };\n\n    setTimeout(() => {\n      setStructure(mockStructure);\n      setLoading(false);\n    }, 500);\n  }, []);\n\n  if (loading) {\n    return <Layout><div className=\"loading\">Загрузка...</div></Layout>;\n  }\n\n  return (\n    <Layout>\n      <div className=\"structure-container\">\n        <h1>Структура предприятия</h1>\n        <div className=\"structure-tree\">\n          <div className=\"company-name\">{structure.name}</div>\n          <div className=\"departments\">\n            {structure.departments.map(dept => (\n              <div key={dept.id} className=\"department\">\n                <div className=\"department-name\">{dept.name}</div>\n                <div className=\"employees\">\n                  {dept.employees.map(emp => (\n                    <div key={emp.id} className=\"employee\">\n                      <div className=\"employee-name\">{emp.name}</div>\n                      <div className=\"employee-position\">{emp.position}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Structure; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}